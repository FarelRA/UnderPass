name: TwoPass Client Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
    paths:
      - 'TwoPass/Client/**'
      - '.github/workflows/client-build.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'TwoPass/Client/**'

jobs:
  test:
    name: Test Go Client
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
      
      - name: Run tests
        working-directory: ./TwoPass/Client
        run: |
          go test -v -race -coverprofile=coverage.out ./...
          go tool cover -html=coverage.out -o coverage.html
      
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: TwoPass/Client/coverage.html

  lint:
    name: Lint Go Client
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
      
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          working-directory: TwoPass/Client

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
      
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: '-no-fail -fmt sarif -out results.sarif ./TwoPass/Client/...'
      
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
      
      - name: Build all architectures
        working-directory: ./TwoPass/Client
        run: make
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: |
            TwoPass/Client/dist/twopass-*
            TwoPass/Client/dist/SHA256SUMS

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: dist
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/twopass-*
            dist/SHA256SUMS
          generate_release_notes: true
